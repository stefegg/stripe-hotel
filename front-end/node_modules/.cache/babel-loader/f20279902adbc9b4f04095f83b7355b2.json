{"ast":null,"code":"var _jsxFileName = \"/Users/stefegbert/Desktop/stripe-hotel/front-end/src/components/StripeForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Wrapper, CARD_OPTIONS, Header, SubHeader, ButtonWrapper, ErrorField } from \"./styles\";\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { Button } from \"..\";\nimport axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport atoms from \"../../atoms\";\nimport { SuccessModal, LoadingModal } from \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StripeForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [cardError, setCardError] = useState(null);\n  const [showSiteModal, setShowSiteModal] = useRecoilState(atoms.showSiteModal);\n  const [cart, setCart] = useRecoilState(atoms.cart);\n  const {\n    totalPrice,\n    title\n  } = cart;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setCardError(null);\n    setShowSiteModal( /*#__PURE__*/_jsxDEV(LoadingModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }, this));\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"https://stripe-hotel.herokuapp.com/payment\", {\n          amount: totalPrice * 100,\n          id\n        });\n\n        if (response.data.success) {\n          setShowSiteModal(null);\n          console.log(\"Successful Payment\");\n          setShowSiteModal( /*#__PURE__*/_jsxDEV(SuccessModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 28\n          }, this));\n        }\n      } catch (error) {\n        setShowSiteModal(null);\n        console.log(\"Error\", error);\n      }\n    } else {\n      setCardError(error.message);\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"Please enter your credit card information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubHeader, {\n        children: [\"You will be charged $\", totalPrice, \" for a \", title, \" room at the Stripe Hotel.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubHeader, {\n        children: \"For testing purposes, enter 4242 4242 4242 4242 424 424 with a valid zip code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorField, {\n        children: cardError && cardError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Pay Now\",\n          width: \"75%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StripeForm, \"fh6wRnkSbfNc//qO3IEAozFcjsk=\", false, function () {\n  return [useStripe, useElements, useRecoilState, useRecoilState];\n});\n\n_c = StripeForm;\nexport default StripeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeForm\");","map":{"version":3,"sources":["/Users/stefegbert/Desktop/stripe-hotel/front-end/src/components/StripeForm/index.js"],"names":["React","useState","Wrapper","CARD_OPTIONS","Header","SubHeader","ButtonWrapper","ErrorField","CardElement","useElements","useStripe","Button","axios","useRecoilState","atoms","SuccessModal","LoadingModal","StripeForm","stripe","elements","cardError","setCardError","showSiteModal","setShowSiteModal","cart","setCart","totalPrice","title","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","success","console","log","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Wrapper,\n  CARD_OPTIONS,\n  Header,\n  SubHeader,\n  ButtonWrapper,\n  ErrorField,\n} from \"./styles\";\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { Button } from \"..\";\nimport axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport atoms from \"../../atoms\";\nimport { SuccessModal, LoadingModal } from \"..\";\n\nconst StripeForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [cardError, setCardError] = useState(null);\n  const [showSiteModal, setShowSiteModal] = useRecoilState(atoms.showSiteModal);\n  const [cart, setCart] = useRecoilState(atoms.cart);\n  const { totalPrice, title } = cart;\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setCardError(null);\n    setShowSiteModal(<LoadingModal />);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n    if (!error) {\n      try {\n        const { id } = paymentMethod;\n        const response = await axios.post(\n          \"https://stripe-hotel.herokuapp.com/payment\",\n          {\n            amount: totalPrice * 100,\n            id,\n          }\n        );\n        if (response.data.success) {\n          setShowSiteModal(null);\n          console.log(\"Successful Payment\");\n          setShowSiteModal(<SuccessModal />);\n        }\n      } catch (error) {\n        setShowSiteModal(null);\n        console.log(\"Error\", error);\n      }\n    } else {\n      setCardError(error.message);\n      console.log(error.message);\n    }\n  };\n  return (\n    <>\n      <Wrapper>\n        <Header>Please enter your credit card information</Header>\n        <SubHeader>\n          You will be charged ${totalPrice} for a {title} room at the Stripe\n          Hotel.\n        </SubHeader>\n        <SubHeader>\n          For testing purposes, enter 4242 4242 4242 4242 424 424 with a valid\n          zip code\n        </SubHeader>\n      </Wrapper>\n      <form onSubmit={handleSubmit}>\n        <fieldset className=\"FormGroup\">\n          <div className=\"FormRow\">\n            <CardElement options={CARD_OPTIONS} />\n          </div>\n        </fieldset>\n        <ErrorField>{cardError && cardError}</ErrorField>\n        <ButtonWrapper>\n          <Button text=\"Pay Now\" width={\"75%\"} />\n        </ButtonWrapper>\n      </form>\n    </>\n  );\n};\n\nexport default StripeForm;\n"]},"metadata":{},"sourceType":"module"}